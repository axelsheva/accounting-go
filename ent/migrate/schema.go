// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// BalancesColumns holds the columns for the "balances" table.
	BalancesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "currency", Type: field.TypeString},
		{Name: "amount", Type: field.TypeFloat64, Default: 0},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "user_id", Type: field.TypeInt},
	}
	// BalancesTable holds the schema information for the "balances" table.
	BalancesTable = &schema.Table{
		Name:       "balances",
		Columns:    BalancesColumns,
		PrimaryKey: []*schema.Column{BalancesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "balances_users_balances",
				Columns:    []*schema.Column{BalancesColumns[5]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "balance_currency",
				Unique:  false,
				Columns: []*schema.Column{BalancesColumns[1]},
			},
			{
				Name:    "balance_user_id",
				Unique:  false,
				Columns: []*schema.Column{BalancesColumns[5]},
			},
			{
				Name:    "balance_user_id_currency",
				Unique:  true,
				Columns: []*schema.Column{BalancesColumns[5], BalancesColumns[1]},
			},
		},
	}
	// TransactionsColumns holds the columns for the "transactions" table.
	TransactionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "amount", Type: field.TypeFloat64},
		{Name: "currency", Type: field.TypeString, Default: "USD"},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"deposit", "withdrawal"}},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "user_id", Type: field.TypeInt},
	}
	// TransactionsTable holds the schema information for the "transactions" table.
	TransactionsTable = &schema.Table{
		Name:       "transactions",
		Columns:    TransactionsColumns,
		PrimaryKey: []*schema.Column{TransactionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "transactions_users_transactions",
				Columns:    []*schema.Column{TransactionsColumns[5]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "transaction_user_id",
				Unique:  false,
				Columns: []*schema.Column{TransactionsColumns[5]},
			},
			{
				Name:    "transaction_created_at",
				Unique:  false,
				Columns: []*schema.Column{TransactionsColumns[4]},
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "age", Type: field.TypeInt},
		{Name: "created_at", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		BalancesTable,
		TransactionsTable,
		UsersTable,
	}
)

func init() {
	BalancesTable.ForeignKeys[0].RefTable = UsersTable
	BalancesTable.Annotation = &entsql.Annotation{}
	BalancesTable.Annotation.Checks = map[string]string{
		"balance_amount_non_negative": "amount >= 0",
	}
	TransactionsTable.ForeignKeys[0].RefTable = UsersTable
}
